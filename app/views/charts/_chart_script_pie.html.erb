<script src="https://d3js.org/d3.v4.min.js"></script>

<% colors_hash = {
  "yellow": "#FFDB29",
  "orange": "#FD7366",
  "red": "#F04F2B",
  "blue": "#30C2FF",
  "purple": "#9E60F8",
  "green": "#3EC28F",
  "gray": "#000000",
  "light gray": "#F4F4F4",
  "medium dark gray": "#1A1A1A",
  "dark gray": "#141414"
}
%>

<!-- This is a custom method to toggle show/hide of export button in navbar -->

<meta charset="utf-8">

<style>

.arc text {
  font: 10px sans-serif;
  text-anchor: middle;
}

.arc path {
  stroke: #fff;
}

</style>

<script>

var data = <%= chart.datasets.order(:created_at).to_json.html_safe %>;

<% if show_export? %>
  var marginTop = 70;
  var marginBottom = 70;
  var marginLeft = 10;
  var valueRadius = 50;
  var positionWidth = 2;
  var positionHeight = 1.8;
<% else %>
  var marginTop = 40;
  var marginBottom = 40;
  var marginLeft = 50;
  var valueRadius = 10;
  var positionWidth = 1.65;
  var positionHeight = 2.2;
<% end %>

var svg = d3.select("#chart-<%= chart.id %> > svg"),
    margin = {top: marginTop , right: 10, bottom: marginBottom, left: marginLeft},
    width = +svg.attr("width"),
    height = +svg.attr("height"),
    radius = Math.min(width, height) / 2.8,
    g = svg.append("g").attr("transform", "translate(" + width / positionWidth + "," + height / positionHeight + ")");

// define colors
// var color = d3.scaleOrdinal(["yellow", "blue", "red", "green", "orange", "purple", "gray"]);

var N = <%= chart.datasets.size %>;
console.log(N);
var colorRange = ['<%= colors_hash[chart.color.to_sym] %>', '#FFF'];
var color = d3.scaleLinear()
  .domain([0, N])
  .range(colorRange);

// generate pie
var pie = d3.pie()
    .sort(null)
    .value(function(d) { return d.value; });

// generate arc
var path = d3.arc()
    .outerRadius(radius - 10)
    .innerRadius(0);

// generate another arc to position labels
var label = d3.arc()
    .outerRadius(radius + 10)
    .innerRadius(radius);

var value = d3.arc()
    .outerRadius(radius - 50)
    .innerRadius(radius - valueRadius);

// append g elements to arc
var arc = g.selectAll(".arc")
  .data(pie(data))
  .enter().append("g")
  .attr("class", "arc");

// append the path to the arc
arc.append("path")
  .attr("d", path)
  .attr("fill", function(d,i){
      return color(i);
  });

// add label
arc.append("text")
  .attr("transform", function(d) { return "translate(" + label.centroid(d) + ")"; })
  .attr("dy", "0.35em")
  .attr("text-anchor", "middle")
  .attr("font-family", "Arial")
  .style("font-size", "<%= font_use %>px")
  .text(function(d) { return d.data.label; });

arc.append("text")
  .attr("transform", function(d) { return "translate(" + value.centroid(d) + ")"; })
  .attr("dy", "0.35em")
  .attr("text-anchor", "middle")
  .attr("font-family", "Arial")
  .style("font-size", "<%= font_use %>px")
  .text(function(d) { return d.data.value; });

// add title
arc.append("text")
  .attr("x", margin.left / 2)
  .attr("y", 0 - (margin.top * 2.7))
  .attr("text-anchor", "middle")
  .attr("font-family", "Arial")
  .style("font-size", "<%= font_use + 6 %>px")
  .text("<%= chart.title if show_export? %>");

// add subtitle
arc.append("text")
  .attr("x", margin.left / 2)
  .attr("y", 0 - (margin.top * 2.4))
  .attr("text-anchor", "middle")
  .attr("font-family", "Arial")
  .style("font-size", "<%= font_use %>px")
  .html("<%= chart.subtitle if show_export? %>");

</script>
