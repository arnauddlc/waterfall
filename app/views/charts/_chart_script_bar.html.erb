<script src="https://d3js.org/d3.v4.min.js"></script>

<% colors_hash = colors_selector %>

<meta charset="utf-8">

<style>

	.axis path,
	.axis line {
	  fill: none;
	  stroke: #000;
	  shape-rendering: crispEdges;
	}

  .axis text {
    font-family: "Arial";
    font-size: <%= font_use - 2 %>px;
    transform: rotate(-45deg);
    text-anchor: end;
  }

	#bar-chart-<%= chart.id %> {
	  fill: <%= colors_hash[chart.color.to_sym] %>;
	}

	.bar {
		opacity: 1;
	}

	.bar:hover {
	  opacity: 0.8;
	}

  .axis--x .tick line{
      visibility:hidden;
    }

	.axis--y {
	  display: none;
	}

  .value {
    fill: white;
    font: <%= chart.font_size %>px;
    font-weight: 400;
    text-anchor: middle;
  }

</style>

<script>

var datasource = <%= chart.datasets.order(:created_at).to_json.html_safe %>;

<% if show_export? %>
  var marginTop = 70;
  var marginBottom = 170;
  var marginLeft = 60;
  var positionHeight = 4;
<% else %>
  var marginTop = 30;
  var marginBottom = 55;
  var marginLeft = 10;
  var positionHeight = 2.5;
<% end %>

var svg = d3.select("#chart-<%= chart.id %> > svg"),

    margin = {top: marginTop , right: 10, bottom: marginBottom, left: marginLeft},
    width = +svg.attr("width") - margin.left - margin.right,
    height = +svg.attr("height") - margin.top - margin.bottom;

var x = d3.scaleBand().rangeRound([0, width]).padding(0.1),
    y = d3.scaleLinear().rangeRound([height, 0]);

var g = svg.append("g").attr("transform", "translate(" + margin.left + "," + height / positionHeight + ")");

    x.domain(datasource.map(function(d) { return d.label; }));
    y.domain([0, d3.max(datasource, function(d) { return d.value; })]);

  // add x labels
      g.append("g")
          .attr("class", "axis axis--x")
          .attr("transform", "translate(0," + height + ")")
          .call(d3.axisBottom(x).tickSizeOuter(0))

      // add y labels (vertical axis)
      g.append("g")
          .attr("class", "axis axis--y")
          .call(d3.axisLeft(y).ticks(10))
        .append("text")
          .attr("font-family", "Arial")
          .attr("transform", "rotate(-90)")
          .attr("y", 6)
          .attr("font-size", " <%= font_use %>px")
          .attr("text-anchor", "end")
          .text("value");

    // add title
    g.append("text")
      .attr("x", (width / 2))
      .attr("y", 0 - (margin.top / 2) - 12)
      .attr("text-anchor", "middle")
      .attr("font-family", "Arial")
      .style("font-size", "<%= font_use + 6 %>px")
      .text("<%= chart.title if show_export? %>");

    // add subtitle
    g.append("text")
      .attr("x", (width / 2))
      .attr("y", 0 - (margin.top / 2) + 8)
      .attr("text-anchor", "middle")
      .attr("font-family", "Arial")
      .style("font-size", "<%= font_use %>px")
      .html("<%= chart.subtitle if show_export? %>");

    // add bars
    g.selectAll(".bar")
      .data(datasource)
      .enter().append("rect")
      .attr("font-family", "Arial")
      .attr("class", "bar")
      .attr("id", "bar-chart-<%= chart.id %>")
      .attr("y", height) // starting point of transition
      .attr("height", 0) // starting point of transition
      .attr("x", function(d) { return x(d.label); })
      .attr("width", x.bandwidth())
      .transition()
        .delay(300)
        .duration(600)
        .ease(d3.easeQuad)
        .attr("y", function(d) { return y(d.value); })
        .attr("height", function(d) { return height - y(d.value); });

    // add labels
    g.selectAll(".text")
      .data(datasource)
      .enter().append("text")
      .attr("font-family", "Arial")
      .attr("class","value")
      .attr("x", (function(d) { return x(d.label) + x.bandwidth() / 2 ; }))
      .attr("y", function(d) { return y(d.value) + 1; })
      .attr("dy", "<%= font_use %>px")
      .style("font-size", "<%= font_use %>px")
      .text(function(d) { return d.value; });

</script>
