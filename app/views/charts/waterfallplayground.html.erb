<h1>Hello Waterfall!</h1>


<% dataset1 = {label: "YE 2017", value: 100, type: "baseline", offset: 0}
dataset2 = {label: "Income", value: 20, type: "plus", offset: 100}
dataset3 = {label: "Expenses", value: 30, type: "less", offset: 100 + 20 - 30}
dataset4 = {label: "YE 2018 without change rate impact", value: 90, type: "baseline", offset: 0}
dataset5 = {label: "Change rate", value: 10, type: "less", offset: 80}
dataset6 = {label: "YE 2018", value: 80, type: "baseline", offset: 0}

datasets = [dataset1, dataset2, dataset3, dataset4, dataset5, dataset6] %>


<p><%= datasets %></p>

<svg id="waterfall" width="1000" height="700"></svg>




<script src="https://d3js.org/d3.v4.min.js"></script>

<% colors_hash = {
  "yellow": "#FFDB29",
  "orange": "#FD7366",
  "red": "#F04F2B",
  "blue": "#30C2FF",
  "purple": "#9E60F8",
  "green": "#3EC28F",
  "gray": "#000000",
  "light gray": "#F4F4F4",
  "medium dark gray": "#1A1A1A",
  "dark gray": "#141414"
}
%>

  <!-- This is a custom method to toggle show/hide of export button in navbar -->

<meta charset="utf-8">

<style>

	.axis path,
	.axis line {
	  fill: none;
	  stroke: #000;
	  shape-rendering: crispEdges;
	}

  .axis text {
    font-family: "Arial";
    font-size: <%= 16 - 2 %>px;
    transform: rotate(-45deg);
    text-anchor: end;
  }

	.bar {
	  fill: #3EC28F;
	}

	.baseline {
		fill: #1A1A1A;
	}

	.plus {
		fill: green;
	}

	.less {
		fill : red;
	}

	.bar {
		opacity: 1;
	}

	.bar:hover {
	  opacity: 0.8;
	}

  .axis--x .tick line{
      visibility:hidden;
    }

	.axis--y {
	  display: none;
	}

  .value {
    fill:white;
    font: <%= font_use %>px;
    font-weight: 400;
    text-anchor: middle;
  }

</style>

<script>

var datasource = <%= datasets.to_json.html_safe %>

<% if show_export? %>
  var marginTop = 120;
  var marginBottom = 120;
<% else %>
  var marginTop = 120;
  var marginBottom = 120;
<% end %>


var svg = d3.select("svg"),
                    
    margin = {top: marginTop , right: 10, bottom: marginBottom, left: 10},

    width = +svg.attr("width") - margin.left - margin.right,
    height = +svg.attr("height") - margin.top - margin.bottom;

var x = d3.scaleBand().rangeRound([0, width]).padding(0.1),
    y = d3.scaleLinear().rangeRound([height, 0]);

var g = svg.append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    x.domain(datasource.map(function(d) { return d.label; }));
    y.domain([ 0, d3.max(datasource, function(d) { return (d.value + d.offset); })]);

    // add x labels
    g.append("g")
        .attr("class", "axis axis--x")
        .attr("transform", "translate(0," + height + ")")
        .call(d3.axisBottom(x).tickSizeOuter(0))

    // add y labels (vertical axis)
    g.append("g")
        .attr("class", "axis axis--y")
        .call(d3.axisLeft(y).ticks(10))
      .append("text")
        .attr("font-family", "Arial")
        .attr("transform", "rotate(-90)")
        .attr("y", 6)
        .attr("font-size", "16px")
        .attr("text-anchor", "end")
        .text("value");

    // add title    
    g.append("text")
      .attr("x", (width / 2))
      .attr("y", 0 - (margin.top / 2))
      .attr("text-anchor", "middle")
      .attr("font-family", "Arial")
      .style("font-size", "<%= 16 + 6 %>px")
      .text("My bank balance");

    // add subtitle
    g.append("text")
      .attr("x", (width / 2))
      .attr("y", 0 - (margin.top / 2) + 25)
      .attr("text-anchor", "middle")
      .attr("font-family", "Arial")
      .style("font-size", "16px")
      .html("in millions of rupiahs");

    // add bars
    g.selectAll(".bar")
      .data(datasource)
      .enter().append("rect")
        .attr("font-family", "Arial")
        .attr("width", x.bandwidth())
        .attr("x", function(d) { return x(d.label); })
        .attr("y", function(d) { return (y(d.value + d.offset)); })
        .attr("height", function(d) { return height - y(d.value); })
        .attr("class", function(d) {return ("bar " + d.type); })
        .attr("id", "bar-chart-waterfall");

    //add labels    
    g.selectAll(".text")
      .data(datasource)
      .enter().append("text")
      .attr("font-family", "Arial")
      .attr("class","value")
      .attr("x", (function(d) { return x(d.label) + x.bandwidth() / 2 ; }))
      .attr("y", function(d) { return y(d.value + d.offset) + 1; })
      .attr("dy", "16px")
      .style("font-size", "16px")
      .text(function(d) { return d.value; });

</script>